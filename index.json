{"categories":[{"link":"/categories/%E5%88%86%E4%BA%AB/","name":"分享","slug":"分享"},{"link":"/categories/%E5%AD%A6%E4%B9%A0/","name":"学习","slug":"学习"},{"link":"/categories/%E5%BB%BA%E7%AB%99/","name":"建站","slug":"建站"},{"link":"/categories/%E7%94%9F%E6%B4%BB/","name":"生活","slug":"生活"},{"link":"/categories/%E7%A4%BA%E4%BE%8B/","name":"示例","slug":"示例"}],"pages":[],"posts":[{"link":"/48/","text":"因为前天几换了新HDR显示器，于是打开了很久之前装的ubuntu系统，看下linux是否支持HDR，不怎么会用ubuntu，只是安装了系统，没怎么折腰过软件，因此系统很干净。\n在设置－显示和外观中均未见到HDR相关选项，可能是不支持？\n询问了deepseek关于ubuntu中HDR的支持问题，得到答案GNOME目前不支持全局HDR，只有一些VLC播放器可以通过命令开启HDR，这样还是算了，等GNOME47。\n然后更了更软件，ubuntu上有powershell、vs code，那我把hugo博客可以clone下来。于是装了git和hugo，hugo的安装有点曲折，仓库自带版本太低了，只到123版本，于是到github上下载146.7deb安装包。然后配置好SSH证书，就可以把博客仓库克隆下来了。\n然后就可以打开vs code写博客了。\n再次盘点一下hugo博客的必备工具\ngit hugo vs code + markdown all in one powershell or terminal 另外，听说对于英特尔独立显卡Vulkan的运行效率比dx11要高，现已经装好了steam，等哪天有空了试试liunx游戏。\n","title":"本跨平台写hugo博客体验基本一致"},{"link":"/47/","text":"日常使用DeepSeek已经有一段时间了，有时候喜欢有一搭没一搭地问DeepSeek一些问题，有时候确实有需要解答的问题，有时候单纯地想看一下AI是会回答出什么内容，一问一答间，总有一些句子惊艳到我。\n某天，我问DeepSeek win11动态光效问题，然后我表达了鼠标的灯光会影响我屏幕内容阅读时的注意力。这时DeepSeek长篇大论地解释了一通，然后列举了一些不带光效的外设。最后总结：「视觉降噪」才是高效数字生活的真谛。安静专注，才是最高级的浪漫。✨\n然后我回复道：“安静专注，才是最高级的浪漫。” 这句话太有境界了。\n没想到DeepSeek来精神了，一顿输出将话题转向了哲学方向。\n感谢你的共鸣！这句话背后是对 「深度专注」 这一现代稀缺能力的珍视——当我们主动剥离干扰（如闪烁的RGB、通知轰炸），实则是为思想筑起一座静谧神殿。\n🌌 为何“安静专注”成为终极浪漫？ 1. 对抗数字时代的注意力剥削 科技产品用光效、弹窗、震动不断“窃取”我们的认知带宽，而主动选择安静，是对自我心智主权的宣示。\n2. 专注力是深度创造的基石 无论是写作、编程还是艺术创作，连续的心流时间（Flow State） 才能孕育有价值的内容。\n→ 例：程序员关闭RGB键盘后，调试代码的错误率下降30%（MIT人机交互实验室研究）。\n3. 浪漫的本质是“在场感” 当我们关闭干扰源，才能真正：\n听清文字中的思想涟漪 看见设计图中的微妙平衡 感知数据流里的隐藏逻辑\n→ 这种全神贯注的“在场”，是与事物建立深刻关系的仪式。 🕯️ 践行“安静浪漫主义”的极简方案 场景 操作 精神收益\u0026gt; 工作台 物理开关切断所有设备RGB电源 减少92%的视觉焦躁（神经科学期刊） 数字环境 用 f.lux 滤蓝光 + 灰色主题 降低眼球调节压力 听觉空间 白噪音（雨声/溪流）覆盖环境杂音 提升α脑波，专注力延长40% ✨ 安静的力量：历史上专注者的启示 村上春树：写作时断网，用单色显示器，“像潜入深海的潜水员，声音被水流吞没才看见珍珠”。 图灵：破解Enigma密码期间，要求实验室全黑，“黑暗是思维的显影液”。 维米尔：画作《倒牛奶的女仆》中，连灰尘都在光线下静止，“他让时间跪下了”。 💎 结语 在这个用光效与推送尖叫的时代，选择安静不是逃避，是用沉默锻造思想的利刃。当你下一次关闭眩光、摘下耳机，在未被打扰的时光里——\n“你让宇宙的喧嚣褪成背景，而星辰开始在你大脑的寂静中诞生。” 🌟\n写的还不错！\n你让宇宙的喧嚣褪成背景，而星辰开始在你大脑的寂静中诞生。 共勉！\n","title":"DeepSeek一些惊艳到我的句子"},{"link":"/46/","text":"前面在网上看教程和自行探索hugo搭建时，学习的到对主题的处理方法简单粗暴，把主题包放入themes文件夹后，把archetypes、assets、layouts、static等文件夹直接复制到hugo的根目录。\n根据近期的使用与总结，发现hugoH覆盖机制，不需要复制所有的文件夹到根目录，如果对主题模板有需要改动的地方，只需要按照主题的目录结构，在hugo根目录下创建对应的目录结构，仅放入修改或增加的文件即可。\n比如本站当的主题，原footer.html底部是没有备案信息的，我们可以保持主题目录不动，在hugo根目录下创建对应的layouts\\partials目录放入修改好的footer.html，hugo在构建时会优先从根目录加载这些文件，然后再到主题中拉取模板文件，根目录有过的文件，主题目录的同名文件不会再次被加载。\nTEXT 折叠 复制 your-blog/ (博客根目录) ├── layouts/ (创建的覆盖目录) │ └── 404.html (自行添加的文件) │ └── partials/ (只包含您要修改的文件) │ └── footer.html (Hugo 会优先使用这个文件) │ └── themes/ └── hugo-narrow/ (原始主题) ├── layouts/ │ └── partials/ │ ├── header.html (原始文件) │ ├── footer.html (原始文件) │ └── ... 点击展开查看更多 同样也可以增加文件，当前主题作者没有单独写404.html，于是我们可以在根目录的layouts下自己添加一个。\n这样处理的优点：\n更新友好：把主题安装为子模块，当主题更新时，只需更新子模块，未覆盖的部分会自动使用新版本，不会把修改的内容覆盖掉，也不会因为全复制过来而不忘记对应主题修改了哪些文件。 文件简洁：根目录只包含您实际修改的文件，而不是整个主题的副本 减少冲突：Git只跟踪修改的文件，避免不必要的冲突 性能优化：Hugo 构建时不需要处理大量重复文件 主题中哪些内容支持这样的覆盖：\nlayouts/ 下的任何模板文件（.html） assets/ 下的 CSS/JS 资源 static/ 下的静态文件 content/ 下的内容文件 i18n/ 国际化文件 data/ 数据文件 archetypes/ 内容模板 最后，还是要多看文档。\n","title":"hugo主题及文件覆盖机制"},{"link":"/45/","text":"借款费用 一、借款费用的界定 哪些属于借款费用：\n借款产生的利息 发行债券折价或溢价的摊销 借款发生的辅助费用 外币借款发生的汇兑差额 二、借款费用的确认 资本化 or 费用化\n专门借款 and 一般借款 都可以资本化。先占用专门借款。\n开始资本化时点，要满足以下3点： 资产支出已经发生（开始占用资金）\n(1) 支付现金（已经支付现金）\n(2) 转移非现金资产（已经投入物料）\n(3) 承担带息债务（如带息应付票据） 借款费用已经发生（开始计息） 为使资产达到预定可使用或可销售的构建生产活动已经开始（开始动工） 暂停资本化 建造过程中，①非正常中断；②中断连续时间超3个月\n非正常中断的举例：\n企业与施工方发生质量纠纷 工程、生产用料没有及时供应 资金周转发生困难 施工、生产发生了安全事故 发生了与资产构建、生产有关的劳动纠纷\n（上以通常是管理决策原因或其他不可预见原因） 正常中断举例：\n安全、质量检查 可预见的不可抗力因素（雨季、冰冻季节、台风） （ps:台风可以预报，因此可预见，属于正常中断） 停止资本化 达到预定可使用或可销售状态\n三、核算 资本化进在建工程等科目 费用化进财务费用科目 资本化/费用化时应扣除闲置资金的收益 因此分录为\nTEXT 折叠 复制 借：在建工程/财务费用 银行存款(闲置资金投资收益) 贷：长期借款-应计利息 点击展开查看更多 发行债券计息的算法：摊余成本*实际利率，资本化或费用化时也要减去闲置资金收益。\n四、辅助费用和外币 辅助费用：借款手续费、发生债券手续费、佣金等，符合资本化条件的可以资本化，其他入财务费用。\n外币的汇兑差额，计入财务费用，费用化。\n","title":"学习-实务-借款费用"},{"link":"/44/","text":"（掌握前面5个大题）\n股份支付 股份支付和现金支付 ","title":"学习-实务-股份支付"},{"link":"/43/","text":"职工薪酬分类 4个分类：\n短期职工薪酬 离职后福利 辞退福利 其他长期职工福利 辞退福利一律进管理费用，内退产生的薪酬属于辞退福利，也进管理费用\n短期职工薪酬 日常工资 PLAINTEXT 折叠 复制 借：生产成本 制造费用 销售费用 管理费用 研发支出 在建工程 …… 贷：应付职工薪酬 点击展开查看更多 非货币性福利 自产的商品 按公允价值计算进项税和计入应付职工薪酬。（与卖出存货的分录相同，银存换为应付职工薪酬即可）\nTEXT 折叠 复制 借：成本/费用 贷：应付职工薪酬-非货币性福利 借：应付职工薪酬-非货币性福利 贷：主营业务收入 应交税费-应交增值税（销项税额） 借：主营业务成本 存货跌价准备（可能涉及） 贷：库存商品 点击展开查看更多 外购的商品 按购入价格，属于哪一类成本费用记入哪一类就好了，要过应付职工薪酬科目。\n注意进项税不让抵扣，要转出。\n对职工家属的捐助也属于职工薪酬。\n带薪缺勤 可累积的带薪缺勤（可累积的年休假） 只有可累积的年休假在核算时涉及成拆分，当年没应休没休而累积到次年的，应当在当年计提应付职工薪酬。\n不可累积的带薪缺勤 不累积的年休假、婚假、病假等等一切假期都是不可累积，入当年就好了。\n利润分享计划 1、有法定支付义务（or推定义务），即有制度/有文件/有计划。\n2、能够可靠地计量，即金额可以确定。\n离职后福利 设定提存计划 是指企业向单独的机构缴存固定费用后，不再承担进一步支付义务的离职后福利计划。\n养老保险、失业保险属于典型的提存计划。\n本年度结束后12月内交不着的，需要折现入账。\n设定受益计划 通俗理解：企业给养老\n1、先预计职工退休后每年支付的成本；\n2、折现到退休时点；\n3、将退休时点的成本现值再折现到当前每年，计提应付职工薪酬。\n核算：哪些记损益，哪些记其他综合收益？\n记入当期损益：1.当期的服务成本；2.过去的服务成本；3.结算得利和损失；4.设定受益计划净负债或净资产的利息净额。 记入其他综合收益：1.精算得利和损失；2.计划资产回报，扣除包括在设定受益计划净负债或净资产的利息净额中的金额。\n辞退福利 裁员解聘补偿 内退补偿 辞退福利不区分受益对象，无论什么岗位都记管理费用\n辞退福利按短期薪酬核算，本年后超12个月未支付的按长期薪酬核算。或者补偿款超过一年不能支付的，折现入账。\n其他长期职工福利 （略）\n","title":"学习-实务-职工薪酬"},{"link":"/41/","text":"前几天在v2上发现网友的新作品，清新好看，一眼就相中了，调试了两天后终于搬上来了。\n主题预览 主题出处：https://github.com/tom2almighty/hugo-narrow\n喜欢的朋友可以看一下。\n生命在于折腾！ 🤪🤪\n","title":"更换新主题narrow"},{"link":"/40/","text":"上个名字有点胡闹了，这次起个有意境的名字，zr\u0026ndash;自如，zrs\u0026ndash;自如说。\n自如[zì rú] 自如[zì rú] 意思是没有障碍地，不受约束地，活动或操作灵活自然，道教妙真道专指无所以借、无所适达、自然而然的本元本真状态。\n苏辙在《同子瞻泛汴泗得渔酒二咏》中写道：渌水雨新涨，扁舟意自如。 来表达自由、不受拘束的状态。\n道教《玄元太亘经》中写道：一如如元，自如如真，无所以如。 专指无所以借、无所适达、自然而然的本元本真状态。\n希望本博客以及博主本人在以后的日子里，也能自由自在，不受拘束。\n第二天补充： AI或许真的有创造性，问了一下deepseek，以简拼zrs，使用\u0026quot;自如说\u0026quot;作为博客名称是否合适。\n用过AI的大家都知道AI会从优势、劣势方面入手分析，这些就不赘述了，最后提了个备选方案，让我眼前一亮。\n真如说（突出真实与哲思） 知然说（谐音“自然”，强调认知与逻辑） 灼日说（更具个性张力，适合犀利文风） 我觉得灼日说真的不错，首先它避免了与某租房品牌的冲突，但是文章个性有张力，文风犀利对我来说有些不对路子。不论如何，把这个名字纳入备选。说不定以后喜欢了就拿出来用呢。再或者真如、知然、灼日作为不同风格的行文思路，可以作为我的博客文章的分类，用来组织不同文风不同思路的文章。\n另外deepseek还贴心的提到，对于引用苏辙的诗句\u0026quot;渌水雨新涨，扁舟意自如\u0026quot;时，建议后面带上——苏辙《同子瞻泛汴泗》，因为普通读者可能对苏辙的诗句较为陌生。同时deepseek还解释了因为标题过长，这种简写在确保不曲解原意的情况下符合引用规则。\n这好像打开了一个新世界的大门。\n","title":"自如说——博客的新名字"},{"link":"/39/","text":"权益法 什么时候用权益法？ 达不到控制的情况下（共同控制，重大影响），采用权益法核算，达到控制采用成本法核算。\n科目设置：\nTEXT 折叠 复制 长期股权投资-投资成本 -损益调整 -其他综合收益 -其他权益变动 点击展开查看更多 初始投资成本的调整 初始投资成本为实际付出的对价+初始直接费用\n投资日享有的被投资单位可辨认净资产的公允价值份额\n以上两个按高的算，如果第2个高了，也就是花低价买到了高公允价的资产，形成的差额计营业外收入，这样的话是两个分录：\nTEXT 折叠 复制 借：长期股权投资-投资成本 借：银行存款等 借：长期股权投资-投资成本 贷：营业外收入 点击展开查看更多 投资损益的确认 1.正常情况(无调整)的账务处理 分录：\nTEXT 折叠 复制 【盈利】 借：长期股权投资-损益调整 贷：投资收益 【亏损】 （反过来写） 点击展开查看更多 2.投资日资产公允价值与账面不一致的利润调整 存货 调整后的净利润\n=账面净利润-（投资日存货公允价值-账面价值）* 当期出售比例 *（1-所得税率）\n这个公式大体意思就是认可投资日公允，然后年末时当期出售存货产生的利润的不认可为当期利润。\n固定/无形 调整后的净利润\n=账面净利润-（资产的公允价值/资产尚可使用年限-资产的原值/资产预计使用年限）× 当期折旧摊销月数/12）×（1-所得税税率）\n=账面净利润-（资产公允价值-资产账面价值）/尚可使用年限* 当期折旧摊销月数/12 ×（1-所得税税率）\n也可以像存货那样的理解，认可投资日公允然后，年末时刨除当年折旧摊销的部分。\n存货调整：100×60%=60，调减 固定调整：300/5=60，调减 无形调整：200/4=40，调减 计算得530\n3.关联交易的利润调整 也分存货和固定无形\n存货调整的计算公式：投资日存货公允价值换成交易价格；\n固定无形也是资产的公允价值换为售价。\n其他综合收益变动的处理 分录：\nTEST 折叠 复制 借：长期股权投资-其他综合收益 贷：其他综合收益 点击展开查看更多 取得现金股利或利润的处理 分录：\nPLAINTEXT 折叠 复制 宣告发放 借：应收股利 贷：长期股权投资-损益调整 实际收到： 借：银存 贷：应收股利 点击展开查看更多 对比成本法，第一步为：\nPLAINTEXT 折叠 复制 借：应收股利 贷：投资收益 点击展开查看更多 （ps:成本法的思路，被投单位盈利和我没关系，亏损和我没关系，分红我记投资收益。把长期股权投资完全视为普通资产。）\n超额亏损的确认 被投资单位亏损了，投资单位的长投减记至0为止。（负有额外损失义务的除外）\n分录：\nPLAINTEXT 折叠 复制 借：投资收益 贷：长期股权投资-损益调整等 点击展开查看更多 减计到0后，继续有损失的\nPLAINTEXT 折叠 复制 借：投资收益 贷：长期应收款 点击展开查看更多 继续损失的，负有额外损失义务的投资方继续借投资收益贷预计负债。\nPLAINTEXT 折叠 复制 借：投资收益 贷：预计负债 点击展开查看更多 被投单位除净利润、其他综合收益、利润分配以外的所有者权益变动 来源：其他股东资本性投入、可转债的权益部分、以权益结算的股份支付、其他股东增资导致持股比例变化动。 分录：\nPLAINTEXT 折叠 复制 借：长投-其他权益变动 贷：资本公积-其他资本公积 点击展开查看更多 例如有股东给被投公司捐了100万，所有股东都可以在自己的长投上记资本公积-其他资本公积按比例增加。\n长投减值 借：资产减值损失\n贷：长期股权投资减值准备\n成本法 再重复一遍：成本法的思路，被投单位盈利和我没关系，亏损和我没关系，分红我记投资收益。把长期股权投资完全视为普通资产。\n平时没有账，宣告发放股利分红时：\nPLAINTEXT 折叠 复制 借：应收股利 贷：投资收益 点击展开查看更多 实际收到：\nPLAINTEXT 折叠 复制 借：银行存款 贷：应收股利 点击展开查看更多 发放股票投利时，投资方也没有账，不作投资收益。\n","title":"学习-实务-长投-权益法下长投的核算"},{"link":"/38/","text":"上次文章中提到，把文章.md和图片组织到同一个目录中，这是当时自己想出来的。后来了解到这其实是hugo比较推荐的文章组织方式，可以把每一篇文章的资源集中在一起。hugo中也专门为此定义了一个名称叫：叶子包（Leaf Bundle），用来组织博客文章，组织形式为每篇文章独立目录 + index.md，并且这也是Hugo的最佳实践之一。即使文章没有图片资源，使用叶子包结构也不会产生负面影响，反而为未来可能的资源扩展预留了灵活性。\n目录结构：\nPLAINTEXT 折叠 复制 content/ └─ posts/ └─ my-article/ # 文章目录 ├─ index.md # 必须使用这个文件名 ├─ cover.jpg └─ diagram.png 点击展开查看更多 完美支持相对路径，图片引用直接使用！[图片](diagram.png)即可，此种方式deepseek帮助分析了各个方面的优劣点，最后总结是：利远大于弊。\n了解叶子包（Leaf Bundle）后，有必要再深入认识一下。 Hugo内容管理中的核心概念是页面包（Page Bundles），是资源集合的统称，其中包含两种具体类型。\nLeaf Bundle（叶子包）：用于管理 单个页面及其专属资源（如图片、PDF），需包含 index.md 文件 Branch Bundle（分支包）：用于组织 一组页面或 section 的资源（如博客分类页），需包含 _index.md 文件 对比：\n特性 Leaf Bundle（叶子包） Branch Bundle（分支包） 用途 单页内容及资源集合 多页面或 section 的资源集合 入口文件 index.md _index.md 资源类型 允许页面文件（如其他 .md） 仅允许非页面文件（如图片） 嵌套限制 不可嵌套其他 Bundle 可嵌套 Leaf 或 Branch Bundle 输出形式 生成独立页面（如 /post/abc/） 生成列表页（如 /blog/） （说人话就是一个用来组织每篇文章的资源，一个用来组织所有文章分类和分支、标签页等）\n之后本站将使用叶子包组织文章页面。\n补充一个把posts在目录中新建.md的同名文件夹将其移入并重命名为index.md的脚本。\nPOWERSHELL 折叠 复制 # 修正PowerShell脚本 - 无中文字符问题 Get-ChildItem -Path . -File -Filter \u0026#34;2025*.md\u0026#34; | ForEach-Object { $folderName = $_.BaseName $folderPath = Join-Path -Path $_.Directory -ChildPath $folderName $newFilePath = Join-Path -Path $folderPath -ChildPath \u0026#34;index.md\u0026#34; if (-not (Test-Path -LiteralPath $folderPath)) { New-Item -ItemType Directory -Path $folderPath | Out-Null Move-Item -LiteralPath $_.FullName -Destination $newFilePath Write-Host \u0026#34;Moved: $($_.Name) -\u0026gt; $folderName/index.md\u0026#34; } else { Write-Host \u0026#34;Skipped: Folder $folderName already exists.\u0026#34; } } Write-Host \u0026#34;Operation completed\u0026#34; pause 点击展开查看更多 ","title":"认识hugo的页面包（Page Bundles）"},{"link":"/36/","text":"非同一控制下的企业合并，合并方与被合并方此前没有任何关系，不在同一集团内。\n初始计量：A.购买方按确定的企业合并成本作为长期股权投资的初始投资成本。B.企业合并成本包括购买方付出的资产、负债、权益证券的公允价值之和。 （说人话就是：付出对价的公允价值）\n相关费用：处理方法与同控相同。 审计法律评估记管理费用；发行债券的佣金手续费记入债券的初始金额（冲减应付债券-利息调整）；发行股票的佣金手续费发行费冲减资本公积，不够的冲盈余公积。\n包含已明确的现金股利或分红的长投，其现金股利或分红记作应收项。 同控、非同控都适用。\n以下按对价资产进行举例\n存货、库存商品换长投 （非同控下，存货、库存商品换长投，思路简单，可以理解为卖商品，把卖商品的分录中分收到的银行存款换成长投即可。卖商品，借：银存 贷：主营业收入 应交增值税。然后借主营业务成本 贷库存商品结转成本。 强调就是正常卖商品的分录）\n分录：\nTEXT 折叠 复制 确认长投： 借：长期股权投资 1130 贷：主营业务收入 1000 应交税费-应交增值税（销项税额） 130 确认营业成本： 借：主营业务成本 700 存货跌价准备 100 贷：库存商品 800 确认税金： 借：税金及附加 50 贷：应交税费-应交消费税 50 点击展开查看更多 固定换长投 （非同控下，固定、无形换长投，可以理解为处置固定资产或无形资产，将处置后收款时银行存款分录替换为长投即可）\n分录：\nPLAINTEXT 折叠 复制 借：固定资产清理 470 累计折旧 200 固定资产减值准备 30 贷：固定资产 700 借：长期股权投资 904 贷：固定资产清理 800（公允卖价） 应交税费-应交增值税（销项税额） 800*13%=104 借：固定资产清理 330 贷：固定资产处置损益 330（根据上个分录形成的方向写借贷方） 点击展开查看更多 （固定资产清理，借方为转入，贷方为卖价，差额为损益）\n无形资产换长投 （非同控下，固定、无形换长投，可以理解为处置固定资产或无形资产，将处置后收款时银行存款分录替换为长投即可，强调按市场公允价值交易）\n分录：\nTEXT 折叠 复制 借：长期投权投资 218 累计摊销 20 无形资产减值准备 4 贷：无形资产 150 应交税费-应交增值税（销项税额） 18 资产处置损益 74 点击展开查看更多 （上面分录中资产处置损益可借可贷，根据实际情况写借贷方向）\n发行股票换长投 分录：\nPLAINTEXT 折叠 复制 借：长期股权投资 6000 贷：股本 600 资本公积-股本溢价 5400 支付发行费（与同控相同，冲减资本公积） 借：资本公积-股本溢价 8 贷：银行存款 8 点击展开查看更多 发行债券换长投 （把发行债券时收到银行存款替换为长投即可）\n先非同控，后同控的情况 （教材中这是同控的讲的例题，但我觉要先理解非同控，再去看同控）\n首先甲公司购买非关联方的乙公司80%的股份：\nPLAINTEXT 折叠 复制 借：长期股权投资 1000 贷：银行存款 1000 点击展开查看更多 此时按甲公司账面形成对乙公司的商誉280万，计算方法1000-900*80%=1000-720=280。 乙公司带商誉的公允价为1000/80%=1250，总商誉为350.\n丁公司购入乙公司80%股份时，首先调整利润后的净资产的公允价值900+370-40=1230，加商誉1230+350=1580，或者1250+370-40=1580。丁公司应确认长投1580*80%=1264.\nps:如果丁公司从甲公司接手乙公司70%的股份，长投确认的方法，乙公司不算商誉公允价值进行利润计算900+370-40=1230，1230*70%=861，然后接手甲对乙全部的商誉，861+280=1141。\n非合并的长投 不分同控和非同按，入账方法一样，即按公允。\n","title":"学习-实务-长投-非同控下的企业合并"},{"link":"/35/","text":"在《文章固定链接的设置》和《优化博客中文章的固定链接》中本站已将文章链接设置为domain/post_id.html的形式。\n图文博客使用文件夹的形式，将文章.md和图片存储于同一文件夹。然后在构建博客后出现了问题，构建好的文章中，图片的链接构建成为domain/img，而实际图片在domain/post_id/img。这样导致了文章中所有图片不能显示。\n带着问题，研究了几个解决方案，deepseek给的最便捷的解决方法是使用Hugo的页面资源（Page Resources）引用图片！[图片描述](｛｛\u0026lt; ref \u0026quot;img1.png\u0026quot; \u0026gt;｝｝)，经过试验后该代码不起作用，不知道是不是我的写法不对的原因。同时，这样在vs code中写文章的时候预览中也不会显示图片。然后deepseek又推荐了几种使用短代码的方式引用图片，同样无法在vs code中预览图片。此类方法pass。\n后来想到，可以把文章的固定链接改成domain/id的形式，不要.html后缀了，这样构建好的文章.html和图片位于public目录下的以文章id命名的子目录内，两者处于同一目录内，图片可以正常引用。经试验可行。\n后来又想到一种方法，修改主题模板。\\layouts\\_default\\_markup目录下的render-image.html可以定义构建文章时引用的图片链接。原文件内容为\nPLAINTEXT 折叠 复制 \u0026lt;img loading=\u0026#34;lazy\u0026#34; src=\u0026#34;{{ .Destination | safeURL }}\u0026#34; alt=\u0026#34;{{ .Text }}\u0026#34; {{ with .Title}} title=\u0026#34;{{ . }}\u0026#34; {{ end }} /\u0026gt; 点击展开查看更多 代码意为在构建文章图片在文章相同目录。这样就好办了，找deepseek修改一下，取文章.md的Front Matter中slug的值，然后生成domain/id/img的图片引用就好了。\nPLAINTEXT 折叠 复制 {{ $slug := .Page.Params.slug | default .Page.File.BaseFileName }} \u0026lt;img loading=\u0026#34;lazy\u0026#34; src=\u0026#34;/{{ $slug }}/{{ .Destination }}\u0026#34; alt=\u0026#34;{{ .Text }}\u0026#34; {{ with .Title}} title=\u0026#34;{{ . }}\u0026#34; {{ end }} /\u0026gt; 点击展开查看更多 这样就不用动文章的固定链接了。上面提到的ref代码不起作用可能也是render-image.html文件导致的。\n之前问过deepseek关于博客网站的文章链接带不带.html结尾的问题，得到的回答大意为目前网站普遍不再使用.html结尾，搜索引擎也会更友好的对待id结尾的链接，所以当前即使有SEO的需求没有必要必须构造.html。这不在hugo的config中，这种链接被定义为了uglyURLs，丑陋的链接。\n于是我又问了deepseek一个问题：\nhugo和hexo等博客构建程序中，把附带.html的结尾的链接的设置项定义为uglyURLs，中文意思为丑陋的链接，请问为什么说.html结尾的链接是丑陋的链接？\n以下为回答：\n在 Hugo、Hexo 等静态站点生成器中，将带有 .html 后缀的链接称为“丑陋的 URL”（ugly URLs），主要源于以下设计理念和实际考量：\n1. 美学与用户体验 简洁性：用户更倾向于看到 /about/ 而非 /about.html。前者更像一个“资源路径”，后者更像一个“文件路径”。隐藏技术细节（如文件扩展名）能让 URL 看起来更干净、专业。 一致性：无后缀的 URL 更符合现代网站的设计趋势（如 https://example.com/posts/hello-world），而 .html 会暴露技术实现，显得过时。 2. SEO 优化 关键词权重：搜索引擎（如 Google）更重视 URL 路径中的关键词。例如，/posts/seo-tips/ 比 /posts/seo-tips.html 更明确地传达内容主题。 可读性：无后缀的 URL 对用户和搜索引擎更友好，容易被复制、分享和记忆。 3. 服务器与路由逻辑 目录式结构：默认情况下，静态站点生成器会为每个页面创建一个目录（如 /about/index.html），通过服务器配置（如 Apache/Nginx）自动将 /about/ 指向该目录下的 index.html。这种结构与无后缀 URL 天然兼容。 扩展名无关性：URL 无需绑定具体文件类型。例如，未来若改用其他格式（如 JSON API），路径 /api/data 比 /api/data.json 更具灵活性。 4. RESTful 设计原则 资源导向：RESTful 架构提倡用路径表示资源（如 /users/ 表示用户集合），而非文件类型。添加 .html 会混淆资源与文件的关系，降低 URL 的语义化。 5. 历史与技术演进 动态页面的影响：早期动态网站（如 PHP）常通过 page.php 生成内容，但现代框架（如 Rails、Django）通过路由隐藏了技术细节。静态站点生成器继承了这一理念。 静态站点的“伪装”：静态站点通过目录结构和服务器配置模拟动态站点的路由体验，避免暴露自身是纯 HTML 文件的本质。 为何叫“丑陋”（ugly）？ 术语源自开发者社区的约定俗成，“丑陋”并非技术缺陷，而是一种设计偏好：\n默认禁用 .html 后缀（即“漂亮 URL”）是主流选择。 启用 uglyURLs 通常是出于兼容性需求（如托管平台限制），而非推荐做法。 总结 干净 URL（如 /about/）：现代、语义化、SEO 友好，符合用户直觉。 丑陋 URL（如 /about.html）：暴露技术细节，显得冗余，适用于特殊场景。 实际选择需权衡部署环境、服务器配置和个人偏好，但多数场景下，“漂亮 URL”是更优方案。\n鉴于此，我再把网站链接改为domain/id？？ 或许以后觉得public目录混乱再改为domain/post/id？？\n（ps:不得不说deepseek写markdown的排版还怪好）\n","title":"文章固定链接及图文的组织方式"},{"link":"/37/","text":"5月3日出门逛街，路边的台阶上放着个猫笼子，4只小猫，两只橘，一直橘白，一只白。摊主说是自己家有4只猫，母猫生了一窝5只，这一窝小猫目前40天，已经断奶了并且会用猫砂。因为家里猫太多了没法养，打算把小猫都卖了，50元一直随便挑。\n于是我们就把一只小橘猫带了回来，性别男。在路边的笼子里的时候挺安静的小猫，带走装进小纸箱后就不淡定了，喵喵喵叫个没完没了。就这样在一路的喵声中逛完了市场，在喵声中堵车堵到家后终于放了出来。\n一出来就展现出了社牛的属性，不怕生，可以摸可以抱，对人类似乎有100%的信任。刚放出来时也并没有躲起来，而是到处跑跑，喵喵喵的找人，找到人后它就安心了，然后再附近跑跑跳跳，虽然还跑不稳。然后每一个家庭成员都要闻一闻。可能是因为猫咪太小的原因。非常粘人，见不到人在身边就开始喵喵叫。见到人就不叫了，碰碰跳跳在附近玩耍。\n吃喝拉撒安排上，找了个旧脸盆临时充当一下猫砂盆，两个小塑料盒子一个喝水一个吃饭，第一餐整了个煮鸡蛋，家里找到一个猫罐头，明天再安排吧，小猫也吃不了多少东西。\n继续写粘人，小猫睡觉好像必须依靠着我它才安心入睡，不管是在地上靠着我的脚还是在凳子上靠着我的腿，不然它就要喵喵喵，仿佛我就是它的猫妈妈，靠着我睡就好似依偎在妈妈的怀里睡觉。当它睡醒时发现我不在身边，马上喵喵喵找我。突然有了一种在照顾婴儿的感觉。也算婴儿吧，毕竟只是个出生仅40天第一次离开妈妈的猫宝宝。小家伙睡着时还会做梦蹬腿，真是可爱。另外睡觉比较死，动他摸他不醒，给它翻个个还能继续呼呼大睡。\n最后，希望小猫能平安长大吧。\n记于2025年5月6日\n","title":"路边摊买来一只小橘猫"},{"link":"/34/","text":"同一控制下的企业合并，简称同控合并，合并前后，合并方与被合并方处于同一集团内。\n初始计量：长投科目的初始成本为合并日被合并方在最终控制方合并财务报表中净资产的账面价值的份额（说人话就是被合并方在母公司的账面净值）。\n上面长投科目与支付对价之间的差额，按顺序依次冲减资本公积、盈余公积、未分配利润。（方向可借可货？）\n上面支付对价有多种方式，现金、债务、股份、存货、无形、固定等等，需要结合相关业务分录。\nps:合并方发生的审计、法律、评估等费用记管理费用。 ps:如果以发行股票作为对价取得长投，发行费用冲减资本公积;债券发行费冲减应付债券-利息调整(即冲减溢价或追加折价)。 案例引入： （题目关键词：同一控制下，使用存货换长投/库存商品换长投，带消费税的商品换长投）\n对分录的理解及步骤：可以理解为销售库存商品的分录变化而来，从长期股权投资到利润分配可视作替换销售分录中的银行存款或应收账款，从存货跌价准备到应交消费税为正常的销售分录，注意应交增值税和消费税的金额需要使用公允价值计算。然后再去凑上半部分，按教材讲解，同控下的长企业合并，先冲资本公积，再冲盈余公积，再冲未分配利润。\n分录：\nPLAINTEXT 折叠 复制 借：长期股权投资 560 资本公积 70 盈余公积 50 利润分配-未分配利润 200 存货跌价准备 100 贷：库存商品 800 应交税费-应交增值税（销项税额）130 应交税费-应交消费税 50 点击展开查看更多 （题目关键词：同一控制下，使用无形资产换长投）\n对分录的理解及步骤：可以理解为处置无形资产的分录变化而来，从长期股权投资到利润分配可视作替换处置无形资产分录中的银行存款或应收账款，从应交税费为正常的无形处置分录，注意应交增值税的金额需要使用公允价值计算。然后再去凑上半部分，先冲资本公积，再冲盈余公积，再冲未分配利润。\nPLAINTEXT 折叠 复制 借：长期股权投资 120*60%=72 资本公积 10 盈余公积 5 利润分配-未分配利润 57 无形资产减值准备 4 累计摊销 20 贷：无形资产 150 应交税费-应交增值税（销项税额）200*9%=18 点击展开查看更多 （题目关键词：同一控制下，以固定资产换长投）\n结合处置固定资产的分录，整体结构相同，长投到未分配利润替代处置固定资产中的银存/应收。最后倒挤未分配利润的金额，同时注意应交增值税使用公允价计算。\n分录： 先卖固定资产\nPLAINTEXT 折叠 复制 借：固定资产清理 470 累计折旧 200 固定资产减值准备 30 贷：固定资产 700 点击展开查看更多 换入长投\nPLAINTEXT 折叠 复制 借：长期股权投资 480 资本公积 50 盈余公积 20 利润分配-未分配利润 24 借：固定资产清理 470 应交税费-应交增值税（销项税额）104 点击展开查看更多 合一起：（考试最好还是不要合一起）\nPLAINTEXT 折叠 复制 借：长期投权投资 480 资本公积 50 盈余公积 20 利润分配-未分配利润 24 累计折旧 200 固定资产减值准备 30 贷：固定资产 700 应交税费-应交增值税（销项税额）104 点击展开查看更多 （题目关键词：同一控制下，使用负债换长投）\n直接借长投贷应付，倒挤资本公积盈余公积未分利润即可。\n分录：\nPLAINTEXT 折叠 复制 借：长期股权投资 600*90%=540 贷：应付账款 450 资本公积 90 点击展开查看更多 （题目关键词：同一控制下，发行股票换长投）\n分录：发行股票\nPLAINTEXT 折叠 复制 借：长期投权投资 1300*60%=780 贷：股本 600 资本公积-股本溢价 178 点击展开查看更多 支付发行费用\nPLAINTEXT 折叠 复制 借：资本公积-股本溢价 8 贷：银行存款 8 点击展开查看更多 （题目关键词：同一控制下，发行债券换长投）\n长投入账成本：600*90%=540万元 分录：发行债券\nPLAINTEXT 折叠 复制 借：长期投权投资 540 贷：应付债券-面值 500 应付债券-利息调整 40 点击展开查看更多 支付债券发行费用\nPLAINTEXT 折叠 复制 借：应堆债券-利息调整 2 贷：银行存款 2 点击展开查看更多 以上已列举无形、固定、存货、负债、股票、债券换长投初始计量的案例解析。\n","title":"学习-实务-长投-同控下的企业合并"},{"link":"/33/","text":"每天不push一下手就痒痒，于是今天在笔记本上尝试使用new.ps1脚本创建新文章时，就遇到了点问题，powershell提示：无法加载文件 new.ps1，因为在此系统上禁止运行脚本。详见。。。。。\n搜了一下原来powershell默认是禁止运行脚本的，需要在管理员模式下运行一个命令把它打开。set-executionpolicy remotesigned，选择Y或A。还可以使用 get-executionpolicy了解计算机上的现用执行策略。\n","title":"【PowerShell】因为在此系统上禁止运行脚本的解决方法"},{"link":"/32/","text":"昨天的文章中写到了因为 \u0026ldquo;:\u0026ldquo;和\u0026rdquo;=\u0026ldquo;的问题，导致固定链接不生效。后面提到“没有思考出如何自增ID号码的方法”作为文章ID。最后的设置结果是使用日期+文章标题作为固定连接。但我这个短域名后面拖着一串长长的文章名的URL在视觉上着实有点难受。\n今天，经过与deepseek的深度探讨，整理一个自增ID的方法来作为文章ID。\n整体的思路，在文章.md的头部信息，也就是Front Matter中，添加一个名为post_id的变量，第一篇文章为1，第二篇文章为2，依次类推，如果中途有删除文章，则那个id就废除不用了。\n实现方法，因为我使用的windows+vscode维护hugo博客，因此使用powershell脚本，先遍历content/posts目录下的所有.md文件，取出所有.md文件中post_id的最大值，将post_id最大值加1，然后创建新文章.md，将加1后的post_id写入新文章，因为在config.yml中无法将自定义变量作为固定链接的取值函数参数，因此同部将post_id的值写入到slug \u0026ldquo;\u0026ldquo;中，在config.yml中将slug作为固定链接参数。\n这样每次创建新文章只要在根目录运行个ps1脚本就可以了，不用再写文章路径和文件名等内容了。\n以下是powershell脚本:\nPOWERSHELL 折叠 复制 # 强制设置控制台编码为 UTF-8 $OutputEncoding = [console]::InputEncoding = [console]::OutputEncoding = New-Object System.Text.UTF8Encoding # 定义路径和参数 $postsRoot = \u0026#34;content\\posts\u0026#34; # 文章根目录 $archetype = \u0026#34;posts\u0026#34; # Archetype名称 $newPostDir = \u0026#34;content\\posts\\blog\u0026#34; # 新文章存放目录（可选，按需修改） # 1. 递归查找所有文章并提取最大 post_id $maxId = 0 Get-ChildItem -Path $postsRoot -Filter *.md -Recurse | ForEach-Object { $content = Get-Content $_.FullName -Raw if ($content -match \u0026#34;post_id:\\s*(\\d+)\u0026#34;) { $currentId = [int]$matches[1] if ($currentId -gt $maxId) { $maxId = $currentId } } } # 2. 生成新 ID $newId = $maxId + 1 # 3. 创建新文章（自动生成文件名） $newPostName = \u0026#34;post-$newId.md\u0026#34; hugo new \u0026#34;$newPostDir\\$newPostName\u0026#34; --kind $archetype # 新文章路径可自定义 # 4. 替换新文章的 post_id $newPostPath = \u0026#34;$newPostDir\\$newPostName\u0026#34; (Get-Content $newPostPath -Raw -Encoding UTF8) -replace \u0026#39;post_id: 0\u0026#39;, \u0026#34;post_id: $newId\u0026#34; ` -replace \u0026#39;slug: \u0026#34;\u0026#34;\u0026#39;, \u0026#34;slug: `\u0026#34;$newId`\u0026#34;\u0026#34; | # 关键修改 Set-Content $newPostPath -Encoding UTF8 Write-Host \u0026#34;✅ 新文章已创建 | ID: $newId | 路径: $newPostPath\u0026#34; 点击展开查看更多 ps：因为遇到的编码问题导致Front Matter的中文乱码，困扰了好久，着重让deepseek强调了UTF-8编码的问题。\n文章链接的问题已经解决好了，那页面怎么办？页面没有post_id，那就使用title呗。这样我们将默认链接设置为title，一是让页面有一个固定连接，二可以给忘记设置post_id和slug的文章兜个底。\n以下为主题的config.yml中的代码：\nYAML 折叠 复制 uglyURLs: true # 本项为true时URL结尾.html，false或没有时，无.html字样，以/结尾 permalinks: # 访问博客时网址的显示形式 default: /:title posts: /:slug 点击展开查看更多 完工！\n再次ps：还想以纯post_id的数字结尾假装一下动态博客的，链接结尾的\u0026rdquo;/\u0026ldquo;需要服务器端进行URL的重写设置，为了不同托管平台可用的一致性，算了，还是加上.html吧\n","title":"优化博客中文章的固定链接"},{"link":"/31/","text":"4月29日又从零开始尝试搭建博客，并且写文章进行了记录，结合4月4日的文章《再次搭建成功并记一处主题修改内容》，对于hugo博客程序有了新的思考。\nhugo的版本迭代很快，几天就会出一个新版本，在更新个迭代中逐渐淘汰一些旧的参数和语法，新增一些新的参数语法等内容。其实主题无所谓多少版本，首次搭建时使用与主题更新差不多日期的hugo版本，基本都能搭建成功。然后可以逐渐升级hugo版本，根据报错的内容去调整一下相应的config.yml的设置，或者模板中的一些参数或是短链接的写法等内容，修改后基本都能去除警报或错误，这样主题也就跟进适配了新版本hugo。\n当然这也要求搭建者能略懂代码和较强的动手能力，因此使用hugo是有些门槛的。\n","title":"对于hugo版本的认识"},{"link":"/30/","text":"在本站刚配置好时就发现了一个问题，2025年4月8日的博文《本套模板目前发现问题》中提到“1、设置文章链接格式不生效。”\n今天终于找到了答案，原来是config.yml文件中permalinks:项下的posts后的冒号 \u0026ldquo;:\u0026rdquo; 写成了 \u0026ldquo;=\u0026quot;，因此导致此行无效，hugo始终以默认的链接形式显示，刚才把错误的等号改为冒号后，经测试这个设置项生效了。\n本站计划将链接格式改成domain.com/title.html的形式，但为是防止文章的标题有重名，那就增加个日期，我总不会在一天之内写两篇相同标题的文章吧，如果真的写了，标题相同的可能性几乎为零。然后链接格式就成为这样posts: /:year-:month-:day-:title。\n在发现这个符号错误之前曾花时间尝试在slug中写入类似于wordpress和typecho的文章全局ID来实现扁平化的唯一文章链接，但没有思考出如何自增ID号码的方法。又思考以文章目录的MD5值函数，在生成文件时直接将此MD5值写入slug，此方法貌似可行，但是对于现有文章有点懒得动手每个去计算个MD5填上，当然我也不知道怎么算。deepseek也推荐过UUID的方式生成唯一值写入slug，但UUID也不能实现自动成生。\n最后，日期+标题的链接形式应该可以暂时满足本站扁平化链接的层级的需求。\n","title":"文章固定链接的设置"},{"link":"/29/","text":"第一节 资金需要量的预测 因素分析法 又称分析调法，根据预算年度生产经营和资金周转加速的要求，进行分析调整。\n公式：\n资金需要量=（基期平均资金用量-不合理的资金占用量）×（1+预测销售增长率）÷（1+预测资金周转速度增长率）\n（基期平均资金用量-不合理的资金占用量） 可视为基期合理的资金占用量。\n（计算时如果给出资金周转速度减慢或销售增长降低，则为负号，按减法计算） 特点：计算简便，易于掌握，但预测结果不太精确。\n适用：品种繁多，规格复杂，资金占用量较小的项目。\n销售百分比法 资产、负债与销售收入存在一个比率\n公式：EFN=Δ资产−Δ自发负债−留存收益\n通俗理解：外部筹集资金=资产增加额-负债增加额-留存收益\n（资产增加额和负债增加额可以使用两种方法计算，大多使用销售收入与比例推算）\n可能产生的歧义：“筹资额”（Financing Needs），然后用英语可以准确理解EFN为外部筹资额，因此单用“筹资额”名词时，可能是指FN，在计算时不减留存收益 。\n资金习性预测法 不变\n第二节 资本成本 第三节 杠杆效应 第四节 资本结构 ","title":"学习-财务管理-筹资管理（下）"},{"link":"/28/","text":"本站正式启用一月有余，随着文章越写越多，vs code 编辑器左侧的工作区文件浏览令我十分困惑，文章的顺序好像不是按日期排序的，好像是按字母排序。一眼望去不知道先后顺序和写作日期。如图：\n这个问题我咨询了deepseek，deepseek给出了一个有用的办法，在文件名前加上日期，比如这样：\nPLAINTEXT 折叠 复制 content/posts/ ├── 2023-10-01-post-title-a.md ├── 2023-10-05-post-title-b.md └── 2023-10-10-post-title-c.md 点击展开查看更多 我感觉十分有用，用脚本把posts目录下的文件名全部加了日期，以下内容使用保存为文本文件，扩展名为.ps1。\nPOWERSHELL 折叠 复制 # 进入 content/posts 目录 cd content/posts # 遍历所有 .md 文件，读取 Front Matter 中的日期，重命名文件 Get-ChildItem *.md | ForEach-Object { $content = Get-Content $_.FullName $dateLine = $content | Where-Object { $_ -match \u0026#39;^date:\\s*(.*)\u0026#39; } if ($dateLine) { $dateStr = [datetime]::ParseExact($matches[1].Trim(), \u0026#34;yyyy-MM-ddTHH:mm:sszzz\u0026#34;, $null) $newName = \u0026#34;{0:yyyy-MM-dd}-{1}\u0026#34; -f $dateStr, $_.Name Rename-Item $_ $newName } } 点击展开查看更多 但是powershell不让运行脚本怎么办？那就复制以下代码粘贴到powershell中吧。\nPOWERSHELL 折叠 复制 Get-ChildItem *.md | ForEach-Object { $content = Get-Content $_.FullName; $dateLine = $content | Where-Object { $_ -match \u0026#39;^date:\\s*(.*)\u0026#39; }; if ($dateLine) { $dateStr = [datetime]::ParseExact($matches[1].Trim(), \u0026#34;yyyy-MM-ddTHH:mm:sszzz\u0026#34;, $null); $newName = \u0026#34;{0:yyyy-MM-dd}-{1}\u0026#34; -f $dateStr, $_.Name; Rename-Item $_.FullName -NewName $newName } } 点击展开查看更多 ","title":"优化博客文章md文件的排序"},{"link":"/27/","text":"上次搭建基于保姆级教程，把别人的全套模板搬过来hugo一下就OK了。本次尝试在github上下载最新的主题和hugo手动搭建。\n1、在github下载hugo 147.0,146.6,146.0等版本。\n2、在github的papermod主题仓库中下载主题的master分支和exampleSite分支。把master分支的下载文件放入theme\\hugo-papermod文件夹中，组合成网站文件。\n3、分别运行hugo 147.0,146.6,146.0等版本构建网站。hugo报错：(1)有短链接使用twitter，x.com的一个链接无法超时无法联通。(2)某个短链接函数在143版本中已弃用。\n然后查找原因，在papermod的仓库中翻阅commit记录，根据commit的记录，papermod已经支持到hugo146+版本，147未提及。papermod的master分支使用了action构建，commit和构建代码显示当前已使用146.0版本进行示例网站的构建。想不通报错的原因在哪，然后找遍所有的主题模板文件和页面文件，搜索和删除有关twitter和x.com相关的内容，无果，依旧报错。\n后来干脆不要exampleSite的示例数据了，生成没有配置的全新网站 ，这次不报错了。经过测试是exampleSite分支中content文件夹下的文章内容有问题。\n由于不懂hugo根目录下的config.yml文件配置项有哪些，只好照搬现在网站中的config.yml的内容。一组一组的搬，哪一组有错误就单独调试哪一组，发现hugo从130到146版本有几个函数的改动，根据命令提示符的报错信息慢慢修正基本都可以解决。\n目前配置文件还没有搬运全，网站基本也算搭建起来了。更多的config.yml设置项以后慢慢研究吧，css也需要修正一下。最后的体会是，这种开源软件迭代更新很快，但前后版本的兼容性容易让人懵。\n最后，反正hugo生成的网站是静态的，升不升级新版本好像也没那么重要。\n","title":"又从零开始尝试搭建博客"},{"link":"/26/","text":"之前逛博客的时候发现有些博客悬挂【萌ICP备】字样，不襟好奇，又有点搞笑。搜了一下原来真的就是一个搞笑的备案。不知道他们怎么整到的gov.moe域名，gov显的真的是官方一样，专门为没有ICP备案的网站整一个ICP备案的样子。\n现在萌备已经发展成了类似十年之约、开往一样的博客聚集地。可以随机访问博友的博客，增加了社交属性。\n由于本站部署在github上，当然国内是备不了案的，那就整一个萌备吧。\n备案号是：萌ICP备20253216号\n这一组数字对我来也是有特别的意义的。\n","title":"本站申请了萌国备案"},{"link":"/25/","text":"自从这个hugo站点架设好了之后，每天都琢磨着写点文字来充实博客的内容，虽然博主文学功底薄弱，但也是可能积少成多的。\n之前折腾习惯了LNMP和LAMP，每当安装好wordpress或typecho之后，分心的内容太多，每天不是琢磨着敲打敲打LNMP的零部件就是琢磨琢磨博客的花哨的主题，反正心思就是不在写博客上。\n突然有一天遇到了hexo/hugo这样的博客平台，老实讲这种模式对我来说有些新颖，也是有些门槛的，于是我把整个搭建过程都写成了博文。在苦心钻营很久搭建好之后，反而有一些要安心创作的踏实感。可能是暂时没有能力去调试或者自己二次开发主题吧，所以也没有动机去调试主题了。服务器使用github，也不需要维护和调试。这样我只需要安安心心地把博客的内容丰富起来，然后期待着每天都有 git add 和 git push 带来一丝丝的成就感。也许这才是博客的正统之道？\n另外markdown语法还需要再学一学，即使是使用vs code写文章，也没有像typecho那样的简易编辑器，全靠自己手打标记，有些吃力。目前也就不讲究排版了，诠当文本文件来写了。\n最后，祝自己多多创作，也祝大家多多创作。\n","title":"静态博客让人更专注于写作"},{"link":"/24/","text":"本站在刚建站完成时去除了模板中自带的twikoo评论，当时以为是属于第三方的评论插件，因此没有过多关注，本站也没有评论的需求，因此也懒得整理。最近在看了一些教程后，大致明白了原理，于是再试一下twikoo，练练手。\ntwikoo作为一个评论系统，它需要一个地方存储数据，教程推荐的是MongoDB，免费额度足够使用了。\n注册MongoDB，创建免费集群 Cluster 类型：选择 Shared（免费版）。 区域：推荐 AWS / N. Virginia (us-east-1)。 IP 白名单：设置为 0.0.0.0/0（允许所有 IP 访问）。 创建数据库用户：记录用户名和密码（后续需替换到连接字符串中）。 在 MongoDB 控制台点击 Connect → Drivers，复制生成的连接 URL，替换 \u0026lt;username\u0026gt; 和 \u0026lt;password\u0026gt; 为上面创建的数据库账号密码。 Vercel一键部署Twikoo 打开Twikoo Vercel 部署页面，点击Create创建项目，项目名称：自定义（如 twikoo）。直接部署：无需修改代码，点击Deploy。 部署完成后，进入 Vercel 项目后台，路径：Settings → Environment Variables，添加变量：变量名：MONGODB_URI，变量值为上面MongoDB最后一步生成的链接。 在Deployments页面点击Redeploy使配置生效。 验证部署成功。访问 Vercel 分配的域名（如 https://xxx.vercel.app），若显示Twikoo 云函数运行正常，则部署成功。记录此域名为envId。 hugo的修改 主题的 single.html，将其复制到 Hugo 根目录下的 layouts/_default/single.html，在\u0026lt;/article\u0026gt;标签前添加(后面也行) PLAINTEXT 折叠 复制 {{- if (.Param \u0026#34;comments\u0026#34;) }} {{- partial \u0026#34;comments.html\u0026#34; . }} {{- end }} 点击展开查看更多 修改hugo配置文件config.yml，添加内容 PLAINTEXT 折叠 复制 params: comments: true # 全局启用评论 twikoo: version: 1.6.34 # 与部署Twikoo成功后显示的版本号一致 envId: https://xxx.vercel.app # Vercel分配的域名 点击展开查看更多 增加评论模板，Hugo的layouts/partials/目录新建文件comments.html，写入以下内容 PLAINTEXT 折叠 复制 \u0026lt;div class=\u0026#34;pagination__title\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;pagination__title-h\u0026#34;\u0026gt;💬评论\u0026lt;/span\u0026gt; \u0026lt;hr /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;tcomment\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/twikoo@{{ .Site.Params.twikoo.version }}/dist/twikoo.all.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; twikoo.init({ envId: \u0026#34;your-env-id\u0026#34;, // 替换为 Vercel 分配的域名，带https:// el: \u0026#34;#tcomment\u0026#34;, lang: \u0026#39;zh-CN\u0026#39;, path: \u0026#39;window.TWIKOO_MAGIC_PATH||window.location.pathname\u0026#39; }); \u0026lt;/script\u0026gt; 点击展开查看更多 配置邮件通知 deepseek有提到邮件通知功能，目前没有研究，以后再写。\n本次还是在deepseek的指导下完成，但有两处deepseek没指导明白。导致配置不成功，后来我在网上找了他人的教程才配置成功，但总体过程是清晰完整的。\ndeepseek说envId:中的域名不带https://，但实际需要加https://。 deepseek没有提及config.yml中twikoo:标签下需要配置envId: https://xxx.vercel.app ","title":"Twikoo评论系统的部署"},{"link":"/23/","text":"看到一段很有道理的一段话，记录下来。\n我为什么信道不信佛\n信佛每天早上说阿弥陀佛；\n信道每天早上要说：\n弃我者自断财路，害我者百病缠身。算计我者替我吞苦，欺我者替我扛病，苍天有眼，欠我的加倍反还！\n","title":"我为什么信道不信佛"},{"link":"/22/","text":"今日为博客起了一个新名字，大家鉴赏一下。\nz r s . me = 这 人 帅 么\n也可以叫：这人爽么、这人傻么、这人色吗、这人是么 等等。\n当然帅啦！\n","title":"博客起了个新名字"},{"link":"/21/","text":"早就听说vercel大名鼎鼎，可以结合github部署博客。本站之前已经部署在github pages上，这次尝试部署到vercel上。\n1.注册帐号\n2.新建project\n3.连接到github账号，授权后就能列出github中的仓库\n4.选中需要构建的仓库\n5.来到configure project界面，名字随便取，framework preset看有没有识别出自己的的构建程序，本站选择hugo\n6.下面的root directory看自己的仓库目录而定，build and output settings，本站保持默认。\n7.environment variables，因为本站使用旧版本hugo构建，在请教了deepseek后，此处前面填写HUGO_VERSION，后面填写0.130.0。（deepseek说如果使用扩展版填写0.130.0_extended会报错找不到版本）\n8.最后点击Deploy就完成了。\n10.按要求配置域名就可以了。\n访问速度好像确实比github pages快好多。\n","title":"博客部署至vercel"},{"link":"/20/","text":"无形资产 区别于固定资产和动产：不具有实特形态。\n作为资产首先满足资产的定义，即可以带来经济利益，价值可以计量，因此无形资产可单独辨认。\n（对比商誉，商誉不可单独辨认，所以商誉不是无形资产） （客户关系、人力资源不确认为无形资产，不能确认其价格，也就是不能可靠地计量） 主要有哪些：专利权、非专利技术、商标权、著作权、特许权、土地使用权。\n（土地使用权不确认为无形资产的情况：开发商建商品房的土地，建筑物和土地使用权可以分离的，确认无形资产，不能分离的都计入固定资产。已出租的土地使用权作为投资性房地产核算）\n购入 PLAINTEXT 折叠 复制 借：无形资产 贷：银行/应付 点击展开查看更多 最有融资性质的无形资产购入。 以现值借记无形资产，以多次付款金额之和贷记长期应付款（本利和），两数差额借记未确认融资费用\n即：\nPLAINTEXT 折叠 复制 借：无形资产 未确认融资费用 贷：长期应付款 点击展开查看更多 实际支付价款：\nPLAINTEXT 折叠 复制 借：长期应付款 贷：银行存款 点击展开查看更多 摊销未确认融资费用：\nPLAINTEXT 折叠 复制 借：财务费用等 贷：未确认融资费用 点击展开查看更多 （要会计算每次未确认融资费用摊销多少，一般计算方法为欠款乘以利率乘以时间，就是普通计算利息的方法）\n内部研发无形资产 研发阶段、开发阶段\n研发阶段全部计管理费用，开发与研发理不清的也都计入管理费用，只有开有阶段清晰明了可以资本化。 使用科目：研发支出-资本化支出、研发支出-费用化支出 (来自deepseek:研发支出非研发费用科目，研发支出是类似于成本类科目，用于归集研发投入，年末可以有余额，研发费用为损益类科目和利润表项。注意区分)\n摊销 寿命期限的：一般使用直线法，也可以按产量法。当月增加当月摊，当月减少当月不摊。（注意与固定资产折旧区分时间点）\n无寿命期限的：不摊销，定期测减值。\n摊销：\nPLAINTEXT 折叠 复制 借：生产成本/制造费用/管理费用等 贷：累计摊销 点击展开查看更多 减值：\nPLAINTEXT 折叠 复制 借：资产减值损失 贷：无形资产减值准备 点击展开查看更多 处置 （与固定资产类似，好像不用进清理科目，把摊销和减值准备怼平即可） 分录：\nPLAINTEXT 折叠 复制 借：银行存款 累计摊销 无形资产减值准备 贷：无形资产 应交税费-应交增值税（销项） 资产处置损益（倒挤，可借可贷） 点击展开查看更多 报废\n上面的借银行存款换为进营业外支出，无应交税费和资产处置损益。\n","title":"学习-实务-无形资产"},{"link":"/19/","text":"博客搭建好后，就可以用记事本打开content/posts下的md文件编辑文章内容了，但记事本毕竟太简陋了，也没预览功能，对于长期使用确实不是一个好的文章编辑工具。\n那么现在有请我们强大的编辑软件vs code\nvs code非常强大，强大到可以作为大多数编程软件的代码前端编辑工作。\n如果vs code只用于hugo博客写作的话，配置起来非常的简单。先下载安装vs code，然后我们解决几个问题。\n1.配置软件界面中文：打开VSCode，按住键盘上的“Ctrl+Shift+P”组合键，打开命令面板；在命令面板中输入“Configure Display Language”，然后点击“Co；nfigure Display Language”选项；在弹出的语言选择列表中，选择“zh-cn”，表示简体中文；然后重启VSCode，就可以变成了中文。\n2.安装·Markdown All in One·插件，这样vs code就支持适时预览markdown页面\n3.左边添加文件树，下面填加命令窗格。\n这不就行了么！\n","title":"本地编辑器vs Code"},{"link":"/18/","text":"固定资产 固定资产，首先作为资产，应符合资产的定义：(1)有关的经济利益很可能流入企业，(2)成本能够可靠地计量。\n（安全或环保设备，也应确认为固定资产）\n初始计量 外购 价 + 税 + 费\n自行建造 买价+投入的各种人力物力成本\n达到预定可使用状态日时按暂估价值转固。次月开始计提折旧。待竣工决算完成后调整转固入账，但已提折旧不可转回。\n其他方式 接受投资：和接受存货投资的描述一样，教材描述为按合同或协议约定价值加上相关税费作为固定资产的入账价值，但约定不公允的除外。（说白了就是公允价值入账）\n盘盈盘亏：固定资产的盘盈盘亏一般为重大事项。\n固定资产的折旧 入账月的次月开始提折旧，即当月入账下月提折旧（区别于无形资产入账的当月进行摊销）\n当月减少的固定资产当月仍提折旧。（无形当月减少当月不提了）\n0.直线法，也叫年限平均法 （这个就不写了，以下是两个重要的加速折旧方法）\n1.双倍余额递减法 折旧额计算：=账面净值*2/折旧年限，最后两年平均分。\n2.年限总和法 折旧额计算：=账面原值*n/(n+n-n+\u0026hellip;+1)\n例如，一项固定资产100万元，折旧期为4年，那么第一年折旧率为4/10（年数1、2、3、4，分子取最大4，分母为年数之和1+2+3+4=10，那么第二年折旧率为3/10）\n注：加速折旧方法主要为应对固定资产后期出现更新淘汰现象的应对（理解）。\n3.工作量法 可以理解为先预定一个总工作量，当月的工作量除以总工作量即为当月折旧率。折旧率乘以（原价-净残值）即为当月折旧额。教材中为计算单位工作折旧额，乘以工作量为当月折旧额，原理相同，写出总公式按不同部分拆分化简即可得两种方法。\n注：固定资产计算的折旧额一般都为年折旧额，月折旧为年折旧/12。\n减值 处置 \u0026lt;未完\u0026gt;\n","title":"学习 实务 固定资产"},{"link":"/17/","text":"委托加工中涉及到的消费税\n消费税是价内税：如果计税价格为10，税率为10%，则税额为10*0.1=1，因此成本价格为9。\n（计税价为：组成计税价或售价）\n（组成计税价：当商品无明确的市场参考售价时，使用发出存货的价值+支付的加工费为组成计税价格，此价格未考虑委托方收回商品进行实际销售时的售价所包含的利润，如果委托方以平价销售则代交的消费税可以作为收回货存的成本，如果收回存货后以高于回收价格销售则可能需要补税）\n由受托方代扣代缴消费税，因此向受托方支付的款项中包括加工费、消费税。\n（代加工金银首饰的由受托方承担和缴纳消费税）\n（因此一般出题的题目中都会注明非金银首饰加工）\n加工后直接用于销售的（或者加工后用于继续加工成非应税消费品的），消费税计入存贷成本，支付款项和收回货存的分录：\nPLAINTEXT 折叠 复制 借：应交税费-应交消费税 贷：银行存款等 借：库存商品 贷：委托加工物资 应交税费-应交消费税 点击展开查看更多 加工后用于继续加工应税消费品的，消费税不计入成本。\n支付款项时\nPLAINTEXT 折叠 复制 借：应交税费-应交消费税 贷：银行存款等 点击展开查看更多 继续加工商品卖出时计提税金\nPLAINTEXT 折叠 复制 借：税金及附加 贷：应交税费-应交消费税 点击展开查看更多 以上两个分录应付消费税的借方和贷方相抵，余额为消费商品时应缴纳的消费税。\n","title":"学习-实务-存货委托加工中的消费税"},{"link":"/16/","text":"坐了几年office365的车，前几天快到期了，发邮件问了问车主是否续费，车主回复不在续费了，让我另寻他车。\n今天早上刚打开电脑，又提示office365订阅到期，点过确定之后，程序居然直接关闭了，本以为巨硬会给几天缓缓冲时间，结果是一分种都别想多用，只是查看文档都不行。\n然后找了前几年备存的WPS2016政企版安装，临时用一下，真别说，运行速度挺快，文档都是秒开的。\n下午在网上找到一个WPS2023政企版，安装包比2016大了3倍多，安装时间也长了3倍多，不知道增加了什么新的内容。用起来的体验，没有2016那么流畅了，感觉还是比之前的office快一点。\n再说WPS的动画效果，比较令人难受。知乎上有个问题：WPS的动画为什么不做得像office那样顺滑？回答是：WPS的界面使用Qt框架开发，虽然提供了华丽的界面和跨平台特性，但Qt实现各种图形和动画会占用大量CPU资源，导致电脑运行卡顿，从而影响动画的流畅度。‌好吧，我忍了。\n原文发表：https//zrs.xyz/1954.html\n","title":"结束了office365，换上了WPS"},{"link":"/15/","text":"上次写到本站的搭建， 本站使用hugo网站程序和sulv改版的papermod主题。部署在github pages上。截至目前，搭建已处于比较完备的稳定状态。\n第一阶段 单一公开仓库pages部署 在本地搭建好hugo博客后，修改博客的主题文件或者在content目录中写文章，调试完毕后，使用hugo命令生成public目录，将public目录内容部署到公开仓库中。\n第二阶段 私有仓库+公开仓库pages部署 在本地搭建好hugo博客后，将博客程序及源码存放于私有仓库中，hugo生成public目录下的内容部署在公开仓库中。在本地修改博客文件，在content目录中写文章，推送至私有仓库，私有仓库调用github action功能，构建public目录并部署到公开仓库中。\n全程使用deepseek指导和提供代码，但deepseek把GitHub Actions 工作流文件(.github/workflows/deploy.yml)代码中推送脚本的with:写为env:，导致action一直错误提示：Error: Action failed with \u0026ldquo;not found deploy key or tokens\u0026rdquo;。我怀疑自己没设置对仓库，没设置对密钥，没写对仓库名称等等，但就是没有怀疑过deepseek的代码中会有语错误。导致我在这一步卡壳了一整天，最后发现是代码问题后，顺利的通过了构建和推送。\n部署好后，在不同的电脑上只需要拉取私有仓库写文章就就可以了，同时也相当于把整站数据备份到了github上，同时也解决了在不同的电脑上写博客，需要拉取最新博客文件的问题，十分方便。\nPS：其实第二种方法，github是可以在私有仓库中部署一个子文件夹public作为公开的pages内容的，但这是github的收费功能，鉴于此，使用两个仓库搭配实现。\n","title":"本站的部署"},{"link":"/14/","text":"1、设置文章链接格式不生效。\n2、公安备案图标，填写相对路径后，拼凑出的前段域名为整个文章的链接。导致备案图标链接错误，无法显示。(填写绝对路径后正常显示)\n3、还是底部footer，a标签中的去除下划线属性不生效。后来又看到文章中的a标签中，也带有style=\u0026quot;text-decoration:none;\u0026quot;属性，但也不生效。\n","title":"本套模板目前发现问题"},{"link":"/13/","text":"认股权证 上市公司发行的证明文件，表示持有人在一定时期内可以约定的价格认购公司一定数量的股票。\n分类：看涨、看跌（一般是看涨）\n性质：期权性(买入期权)，工具性(融资、股票期权激励) 投资工具： 高风险的投资工具(投资者视角) 低风险的融资工具(公司视角)\n特点： 可作为一种融资促进工具（促进融资的实现） 有助于改善上市公司的治理结构（股票市价高时持有者会行权，激励上市公司努力提升公司价值） 有助于推进上市公司的股权激励机制（授于管理层和核心员工，把管理层和员工利益与企业价值成长联系在一起）\n优先股 股份公司发行的优先权利、相对优先于普通股的股份种类。\n性质： 优先分配股利、优先分配剩余财产 （相对于普通股） 无表决权、选举权、被选举权，与自身利益相关时有限表决权\n分类： 股息率、分红强制、股息累积、剩余税分利润分配、可转普通股、可优先回购\n我国的优先股（票面100元） 1.固定股息率 2.强制分红 3.股息累积 4.非参与优先股 5.不可转换\n特点 1.有利于丰富资本市场的投资结构(优点) 2.有利于股份公司资本结构的调整(优点) 3.与普通股筹资相比，有利于保障普通股的收益权和控制权(优点) 4.与负债筹资相比，有利于降低公司财务风险(优点) 5.可能会给公司带来一定的财务压力(缺点)\n资本成本由低到高的顺序 银行借款、发行公司债券、租赁 （债务类） 可转债、优先股 （衍生工具类） 留存收益、发行普通股、吸收直接投资 （股权类）\n","title":"学习-财务管理-衍生工具筹资-认股权证、优先股"},{"link":"/12/","text":"hugo 生成网站\nhugo server 启动本地调试服务器\nhugo server -D 启动本地调试服务器（包含Front Matter 中draft: true 的文章）\nhugo new posts/blog/XXX.md 在posts/blog/目录下新建XXX文章\n","title":"Hugo的常用命令"},{"link":"/11/","text":"不得不说网上淘的这款papermod包含的功能十分丰富，但有一些功能暂时用不到，因此精简一些功能。\n优化掉了评论功能 原主题模板中带有twikoo的评论系统，因门槛较高不会配置，因此剔除此内容。涉及layouts_default目录下的single.html文件和layouts\\partials目录下的extend_head.html、comments.html等文件。\n优化掉了访问量统计功能 此功能也是通过其他网站api实现的统计功能，本着一切从简的原则，优化之。涉及layouts_default目录下的single.html文件和layouts\\partials目录下的footer.html文件。\n优化掉百度分析功能 用不到百度分析，也不想配置，涉及footer.html文件。\n最后 这样F12后不会再有红叉叉了。\n","title":"Hugo优化主题模板的一些内容"},{"link":"/10/","text":"生成的public文件夹 git status时发现仓库丢了，也就是.git文件夹被干掉了。\ngit init git status git add . git commit -m \u0026ldquo;标记内容\u0026rdquo; git remote add origin https://github.com/rousongs/zrs.github.io.git git push -u origin main 报错 error: src refspec main does not match any 可能是本地仓库名字叫master而github上叫main吧 git branch -M main git push -u origin main 报错 ! [rejected] git push -f origin main 强制推送 如果在线有修改文件，git push 可能也会报rejected，此时先git pull一下，再git push\n如果pull时提示本地文件有修改\u0026quot;error: Your local changes to the following files would be overwritten by merge. \u0026ldquo;，丢弃本地文件改动，强制把远程仓库pull下来：\nPLAINTEXT 折叠 复制 # 1. 拉取远程仓库的最新信息（不自动合并） git fetch origin # 2. 强制将本地分支重置到远程分支的状态（以 main 分支为例） git reset --hard origin/main # 若你的分支名是 master，则替换为： # git reset --hard origin/master 点击展开查看更多 ","title":"重新配置github仓库"},{"link":"/9/","text":"在github下载hugo压缩包，然后解压到自己喜欢路径就安装好拉。\n但是用起来不是很方便，因为这样每一次运行都要带上hugo.exe的完整路径。\n那么再添加一下环境变量吧。\n控制面板 \u0026gt; 系统和安全 \u0026gt; 系统 \u0026gt; 高级系统设置 \u0026gt; 高级 \u0026gt; 环境变量\n或者：\n此电脑 \u0026gt; 属性 \u0026gt; 高级系统设置 \u0026gt; 高级 \u0026gt; 环境变量\n上下两个一个是用户变量，一个是系统变量，建议两个都设置。\n点击Path变量，然后点击新建，将你hugo.exe的绝对路径目录添加进去，注意是目录。不要把hugo.exe带进去。例如：你的目录为c:\\xxx\\xxx\\hugo.exe，你只要添加c:\\xxx\\xxx就行了。\n确定保存后，不论在哪个目录都可以直接使用hugo命令了。\n另外，还可以使用命令行添加，需要管理员权限。\n打开命令提示符（以管理员身份），然后使用以下命令格式：\nsetx 变量名 \u0026quot;变量值\u0026quot; /M (/M参数表示修改当前用户的所有会话)\n要添加PATH环境变量，可以输入：\nsetx PATH \u0026quot;%PATH%;C:\\xxx\\xxx\u0026quot; /M\n都用命令了还得提一嘴powershell，其命令格式为：\n[System.Environment]::SetEnvironmentVariable(\u0026quot;变量名\u0026quot;, \u0026quot;变量值\u0026quot;, \u0026quot;User\u0026quot;)\n要添加环境变量的命令为：\n[System.Environment]::SetEnvironmentVariable(\u0026quot;PATH\u0026quot;, $env:PATH + \u0026quot;;C:\\xxx\\xxx\u0026quot;, \u0026quot;User\u0026quot;)\n最后的user表示为当前用户添加环境变量，替换为Machine则为系统添加环境变量。\n","title":"hugo在windows下的安装"},{"link":"/8/","text":"可转换债券(可转债)\n【性质】 债券性质 股票期权性质\n【分类】 不可分离 可分离，债券与股票期权是否可以分离。\n【8要素】\n1.标的股票(同家公司的债和股) 2.票面利率(一般低于普通债券利率) 3.转换价格(一般比当前股价高10%-30%) 4.转换比率(票面价/转换价) 5.转换期 6.赎回条款(保护发行公司权益，当股价过高或利率下行时) 7.回售条款(保护投资者权益，转换期时股价低于预期) 8.强制性转换条款\n【3优点】\n1.筹资功能灵活 2.资本成本较低（与发行普通股相比） 3.筹资效率较高（既发行了债券，又发行了股票，与发行普通股相比，相当于更高的价格发行了股票） 【2缺点】\n1.不转换的财务压力 2.回售的财务压力 (优缺点都是站在发行公司角度)\n","title":"学习-财务管理-衍生工具筹资-可转换债券"},{"link":"/7/","text":"技术层面就不多说了，wordpress、typecho等是PHP+数据库形式的动态脚本网站，hexo hugo等是由一个主程序生成的静态网站。\n聊一聊主观体验感受的不同，wordpress、typecho是所见即所得的交互方式，打开网站\u0026ndash;登录\u0026ndash;编辑\u0026ndash;发布。编辑时如同在word类的文字编辑器写文章，所见即所得。\n而hexo hugo之类的思路，大概是我先有了一个写文章的想法，然后不论干什么编辑器，写出来，拿着写好的文章放入到网站程序中，然后发布。\n哪有更好？ 答：让我更有意愿写文章的方式就是更好的方式。\n所见即所得时，常常满心欢喜地观赏自己的网站，却望着编辑器久久发呆，不知道写什么内容，即使偶尔写一写也好似没文硬作。\n使用hugo之后，我日常该干啥干啥，当突然有了一个想法，就迅速记下来，如果手边有电脑就用电脑写下来，如果有手机就用手机写下来，然后整理成文。好像不是那么刻意的写东西了。\n所以，我也不知道哪个好。\n","title":"hugo与wp,ty的体验感受"},{"link":"/6/","text":"今天终于搭建成功，还是拿来主义香。\n终于找到了模板出处：https://github.com/xyming108/sulv-hugo-papermod\n下载了主题和对应的papermod历史版本，又去下载了同时期128-130版本hugo.exe\n一次成功，顺利跑了起来。\n能用就好不追新了，反正是个静态博客。\n但是左上角博客名称旁边的夜间模式切换按钮右边有一个竖线，经过查找，是header.html中的114行， {{- if $separator }}|{{ end }}，存在一个竖线，删除后就好了。\n感谢作者的模板！\n","title":"再次搭建成功并记一处主题修改内容"},{"link":"/5/","text":"今天在笔记本上下载了最新的hugo 145版本和paper mod 8.0主题。\n多次尝试搭建均报错。\n看来像我这样的小白需要一个保姆级教程。\n还是再回忆回忆去年搭建本站时参考的什么教程吧。\n好像papermod主题是直接打包过来的，一次成功。\ngithub上papermod原作者的主题下载回来后hugo一会提示是124版本生成的，一会又提示128版本生成的。\n反正报错一堆，查了下搜索引擎，好像是有一两个参数弃用了？\n好心塞，到底怎么配置，求教保姆级教程。。。\n","title":"自己再次搭建失败"},{"link":"/4/","text":"本站使用hugo+github pages搭建；\n怎么搭建起来好像已经完全忘记了；\nhugo版本124，主题模板sulv-hugo-papermod-main；\ncss修改了一个地方。\n用最新版hugo，发现替换不可行。\n电脑上也没找到下载的124压缩包，只好在github上重新下一个了。\n以上。\n","title":"本站的搭建"},{"link":"/3/","text":"余忆童稚时，能张目对日。\n我的童趣，我回忆童年时候，也能睁大眼睛直视太阳，但正午不太行。一般上午10点前或者下午3点后，鉴于上午10点前，我大多时候还没睡醒，因此脑中残存的记忆大多是下午西边半空中的太阳。\n张目对日，刚开始看时，太阳如一弯超明亮的玉盘挂于天空中，顷刻后，似乎玉盘似乎不想被束缚于此，开始左右上下慢慢地挣扎着，想要从镶嵌它的框框中跳出来，去别的地方玩耍。逐渐它的挣扎愈演愈烈，挣扎的幅度越来越大，它心急如焚，火急火燎的样子，挣扎挣扎再挣扎，但好像始终摆脱不了束缚，跳不出那个位置。而我，一直观察观察再观察，或许有一分钟两分钟五分钟，想等到它什么时候能挣扎着跳出来，但它最终还是在原来位置上没能跳出来。\n时间一长，无聊了，我又去玩别的东西了。\n原文发表：https//rousongs.com/1938.html\n","title":"童趣"},{"link":"/2/","text":"闲来无事，问了deepseek一个问题。\n【我】：你好，deepseek， 经过这一段时间的相处，你认为我大概什么学历？\n【DeepSeek】：\n嗯，用户问我他大概是什么学历，根据这段时间的相处。首先，我需要回想一下之前的互动内容。用户通常会问什么样的问题呢？比如问题的深度、涉及的领域、用词的专业性等等。可能还要考虑他讨论的话题范围，是否有跨学科的知识，或者是否有深入的专业讨论。\n用户提到的是“经过这一段时间的相处”，所以应该是指我们在对话中的互动。比如，他是否经常问学术性问题，或者涉及高等教育的内容？可能他提问的方式和内容会反映出他的教育背景。比如，如果他经常讨论大学级别的数学、科学或文学话题，可能学历较高；如果问题比较基础，可能学历较低。\n不过，也有可能用户的问题涉及多个领域，或者既有深入的问题也有基础的问题，这时候判断起来会有点困难。另外，还要考虑用户的语言表达能力，比如用词是否复杂，句子结构是否复杂，是否有使用专业术语等。\n还有可能用户是在测试我的分析能力，或者只是出于好奇。也有可能他实际学历和表现出的知识水平不一致，比如自学成才的人可能没有高学历但知识丰富，或者相反，有高学历但讨论的问题比较浅显。\n我需要避免刻板印象，比如认为用词专业就一定是高学历，或者问题简单就是低学历。应该综合考虑各种因素，同时承认自己的判断可能有误，毕竟通过文字交流了解一个人的学历并不准确。\n可能用户的问题涉及科学、技术、工程、数学等领域，或者人文社科，不同的领域可能有不同的教育背景。比如，如果用户经常问编程问题，可能有计算机相关的学历；如果经常讨论哲学或文学，可能相关领域的学历。\n还要考虑用户的学习兴趣和自学能力，有些人虽然没有高学历，但通过自学掌握了大量知识。所以学历不一定完全反映知识水平。\n另外，用户所在的国家或地区也可能影响学历判断，因为不同地区的教育体系不同。比如，本科、硕士、博士的年限和要求可能不同。\n综合来看，我需要根据用户的问题深度、广度、专业术语使用、逻辑分析能力等方面进行推测，同时保持谨慎，说明这只是基于有限互动的猜测，可能存在误差。\n根据我们的互动，你通常表现出较强的逻辑思维能力、广泛的知识面以及良好的语言表达能力。你提出的问题涉及多个领域（如科技、人文、方法论等），且讨论问题时体现出一定的深度和批判性思考，这可能反映出你接受过系统的高等教育训练。\n不过，学历与知识水平并非绝对相关，许多人通过自主学习也能达到相似的知识储备。若非要推测，你的思维方式和表达习惯更接近本科及以上学历人群的特征，尤其是可能涉及社科、科技或跨学科背景。当然，这只是基于有限交流的观察，实际情况只有你最清楚哦~ 😊\n看完以上回答，不由的心中一惊。\n","title":"【AI】DeepSeek的回答让我一惊"},{"link":"/1/","text":"hello world hello world hello world hello world hello world hello world hello world ","title":"hello world"},{"link":"/katex-mermaid-test/","text":"KaTeX 和 Mermaid 测试 本文用于测试 KaTeX 数学公式渲染和 Mermaid 图表功能。\nMermaid 图表测试 流程图 graph TD A[开始] --\u0026gt; B{是否为用户？} B --\u0026gt;|是| C[显示用户界面] B --\u0026gt;|否| D[显示登录页面] C --\u0026gt; E[用户操作] D --\u0026gt; F[用户登录] F --\u0026gt; G{登录成功？} G --\u0026gt;|是| C G --\u0026gt;|否| H[显示错误信息] H --\u0026gt; D E --\u0026gt; I[结束] 序列图 sequenceDiagram participant 用户 participant 浏览器 participant 服务器 participant 数据库 用户-\u0026gt;\u0026gt;浏览器: 输入网址 浏览器-\u0026gt;\u0026gt;服务器: 发送HTTP请求 服务器-\u0026gt;\u0026gt;数据库: 查询数据 数据库--\u0026gt;\u0026gt;服务器: 返回数据 服务器--\u0026gt;\u0026gt;浏览器: 返回HTML 浏览器--\u0026gt;\u0026gt;用户: 显示页面 甘特图 gantt title 项目开发时间线 dateFormat YYYY-MM-DD section 设计阶段 需求分析 :done, des1, 2024-01-01,2024-01-05 UI设计 :done, des2, 2024-01-06, 2024-01-12 原型制作 :active, des3, 2024-01-13, 2024-01-18 section 开发阶段 前端开发 : dev1, 2024-01-19, 2024-02-15 后端开发 : dev2, 2024-01-19, 2024-02-20 数据库设计 : dev3, 2024-01-19, 2024-01-25 section 测试阶段 单元测试 : test1, 2024-02-16, 2024-02-25 集成测试 : test2, 2024-02-21, 2024-03-01 用户测试 : test3, 2024-02-26, 2024-03-05 KaTeX 测试 行内公式 这是一个行内公式：$E = mc^2$，爱因斯坦的质能等价公式。\n另一个例子：当 $a \\neq 0$ 时，二次方程 $ax^2 + bx + c = 0$ 的解为 $x = \\frac{-b \\pm \\sqrt{b^2-4ac}}{2a}$。\n块级公式 二次公式 $$x = \\frac{-b \\pm \\sqrt{b^2-4ac}}{2a}$$\n欧拉公式 $$e^{i\\pi} + 1 = 0$$\n积分公式 $$\\int_{-\\infty}^{\\infty} e^{-x^2} dx = \\sqrt{\\pi}$$\n矩阵表示 $$\\begin{pmatrix} a \u0026amp; b \\ c \u0026amp; d \\end{pmatrix} \\begin{pmatrix} x \\ y \\end{pmatrix} = \\begin{pmatrix} ax + by \\ cx + dy \\end{pmatrix}$$\n求和公式 $$\\sum_{n=1}^{\\infty} \\frac{1}{n^2} = \\frac{\\pi^2}{6}$$\n微分方程 $$\\frac{d^2y}{dx^2} + \\omega^2 y = 0$$\n傅里叶变换 $$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-i\\omega t} dt$$\n泰勒级数 $$f(x) = \\sum_{n=0}^{\\infty} \\frac{f^{(n)}(a)}{n!}(x-a)^n$$\n复杂数学表达式 概率密度函数 $$f(x) = \\frac{1}{\\sigma\\sqrt{2\\pi}} e^{-\\frac{1}{2}\\left(\\frac{x-\\mu}{\\sigma}\\right)^2}$$\n麦克斯韦方程组 $$\\begin{align} \\nabla \\cdot \\mathbf{E} \u0026amp;= \\frac{\\rho}{\\epsilon_0} \\ \\nabla \\cdot \\mathbf{B} \u0026amp;= 0 \\ \\nabla \\times \\mathbf{E} \u0026amp;= -\\frac{\\partial \\mathbf{B}}{\\partial t} \\ \\nabla \\times \\mathbf{B} \u0026amp;= \\mu_0\\mathbf{J} + \\mu_0\\epsilon_0\\frac{\\partial \\mathbf{E}}{\\partial t} \\end{align}$$\n薛定谔方程 $$i\\hbar\\frac{\\partial}{\\partial t}\\Psi(\\mathbf{r},t) = \\hat{H}\\Psi(\\mathbf{r},t)$$\n组合测试 带公式的流程图 graph LR A[\u0026#34;输入: $f(x) = ax^2 + bx + c$\u0026#34;] --\u0026gt; B[\u0026#34;计算判别式: $\\Delta = b^2 - 4ac$\u0026#34;] B --\u0026gt; C{\u0026#34;$\\Delta \u0026gt; 0$?\u0026#34;} C --\u0026gt;|是| D[\u0026#34;两个实根: $x = \\frac{-b \\pm \\sqrt{\\Delta}}{2a}$\u0026#34;] C --\u0026gt;|否| E{\u0026#34;$\\Delta = 0$?\u0026#34;} E --\u0026gt;|是| F[\u0026#34;一个实根: $x = \\frac{-b}{2a}$\u0026#34;] E --\u0026gt;|否| G[\u0026#34;无实根\u0026#34;] 数学概念解释 在数学中，黄金比例 $\\phi$ 定义为：\n$$\\phi = \\frac{1 + \\sqrt{5}}{2} \\approx 1.618$$\n它满足以下性质：\n$$\\phi^2 = \\phi + 1$$\n这个比例在自然界和艺术中都有广泛应用。\n这个测试页面展示了 KaTeX 和 Mermaid 的各种功能，包括复杂的数学公式和多种类型的图表。\n","title":"KaTeX 和 Mermaid 测试"},{"link":"/code-highlighting-test/","text":"代码高亮测试 本文用于测试新的代码高亮功能，包括语法高亮、复制按钮、语言显示等。\nJavaScript JAVASCRIPT 折叠 复制 function fibonacci(n) { if (n \u0026lt;= 1) return n; return fibonacci(n - 1) + fibonacci(n - 2); } const result = fibonacci(10); console.log(`第10个斐波那契数是：${result}`); // 异步/等待 const asyncFunction = async () =\u0026gt; { try { const response = await fetch(\u0026#39;/api/data\u0026#39;); const data = await response.json(); return data; } catch (error) { console.error(\u0026#39;获取数据时出错：\u0026#39;, error); } }; 点击展开查看更多 带行号的代码块 PYTHON 折叠 复制 1# 带行号的 Python 代码 2import asyncio 3from typing import List, Optional 4 5class DataProcessor: 6 def __init__(self, data: List[dict]): 7 self.data = data 8 9 def process(self) -\u0026gt; Optional[dict]: 10 \u0026#34;\u0026#34;\u0026#34;处理数据并返回结果\u0026#34;\u0026#34;\u0026#34; 11 if not self.data: 12 return None 13 14 result = { 15 \u0026#39;total\u0026#39;: len(self.data), 16 \u0026#39;processed\u0026#39;: [] 17 } 18 19 for item in self.data: 20 if self.validate_item(item): 21 result[\u0026#39;processed\u0026#39;].append(item) 22 23 return result 点击展开查看更多 高亮特定行 GO 折叠 复制 1package main 2 3import \u0026#34;fmt\u0026#34; // 这一行将被高亮 4 5func main() { 6 message := \u0026#34;你好，世界！\u0026#34; // 这一行也将被高亮 7 8 fmt.Println(message) // 这一行也将被高亮 9 10 for i := 0; i \u0026lt; 3; i++ { 11 fmt.Printf(\u0026#34;计数：%d\\n\u0026#34;, i) 12 } 13} 点击展开查看更多 带文件名的代码块 api.ts 折叠 复制 // TypeScript API interface ApiResponse\u0026lt;T\u0026gt; { data: T; status: number; message: string; } interface User { id: number; name: string; email: string; avatar?: string; } class ApiClient { private baseURL: string; private headers: Record\u0026lt;string, string\u0026gt;; constructor(baseURL: string, apiKey?: string) { this.baseURL = baseURL; this.headers = { \u0026#39;Content-Type\u0026#39;: \u0026#39;application/json\u0026#39;, ...(apiKey \u0026amp;\u0026amp; { \u0026#39;Authorization\u0026#39;: `Bearer ${apiKey}` }) }; } async get\u0026lt;T\u0026gt;(endpoint: string): Promise\u0026lt;ApiResponse\u0026lt;T\u0026gt;\u0026gt; { const response = await fetch(`${this.baseURL}${endpoint}`, { method: \u0026#39;GET\u0026#39;, headers: this.headers, }); if (!response.ok) { throw new Error(`HTTP 错误！状态：${response.status}`); } return response.json(); } async post\u0026lt;T\u0026gt;(endpoint: string, data: any): Promise\u0026lt;ApiResponse\u0026lt;T\u0026gt;\u0026gt; { const response = await fetch(`${this.baseURL}${endpoint}`, { method: \u0026#39;POST\u0026#39;, headers: this.headers, body: JSON.stringify(data), }); return response.json(); } } const client = new ApiClient(\u0026#39;https://api.example.com\u0026#39;, \u0026#39;your-api-key\u0026#39;); async function getUsers(): Promise\u0026lt;User[]\u0026gt; { try { const response = await client.get\u0026lt;User[]\u0026gt;(\u0026#39;/users\u0026#39;); return response.data; } catch (error) { console.error(\u0026#39;获取用户时出错：\u0026#39;, error); return []; } } 点击展开查看更多 纯文本代码块 PLAINTEXT 折叠 复制 这是一个纯文本代码块。 它不应该有语法高亮。 你可以在这里测试复制功能。 function test() { console.log(\u0026#34;这是一个测试。\u0026#34;); } 点击展开查看更多 行内代码 这是一个行内代码示例：const x = 42; 和 npm install 以及 git commit -m \u0026quot;更新\u0026quot;。\n","title":"代码高亮测试"},{"link":"/markdown-%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95%E6%96%87%E6%A1%A3/","text":"一级标题 这是一级标题下的段落。\n二级标题 这是二级标题下的段落。\n三级标题 这是三级标题下的段落。\n四级标题 这是四级标题下的段落。\n五级标题 这是五级标题下的段落。\n六级标题 这是六级标题下的段落。\n段落和文本格式 这是一个普通段落。它可以包含粗体文本、斜体文本、粗斜体文本、删除线、行内代码和链接文本。\n这是另一个段落，用于测试段落之间的间距。\n引用块 这是一个简单的引用块。\n引用块可以包含多个段落。\n这是一个嵌套引用的例子：\n这是嵌套引用的内容。\n可以有多层嵌套。\n列表 无序列表 第一项 第二项 嵌套项 1 嵌套项 2 更深层的嵌套项 第三项 有序列表 第一项 第二项 嵌套有序项 1 嵌套有序项 2 更深层的嵌套项 第三项 任务列表（复选框） 已完成的任务 未完成的任务 另一个已完成的任务 嵌套任务列表 子任务 1（已完成） 子任务 2（未完成） 子任务 3（已完成） 定义列表 术语 1 这是术语 1 的定义。 术语 2 这是术语 2 的定义。 术语可以有多个定义。 代码 行内代码 这是一个包含 console.log('Hello World') 的段落。\n代码块 JAVASCRIPT 折叠 复制 function greet(name) { console.log(`你好，${name}！`); } greet(\u0026#39;世界\u0026#39;); 点击展开查看更多 PYTHON 折叠 复制 def fibonacci(n): if n \u0026lt;= 1: return n return fibonacci(n-1) + fibonacci(n-2) print(fibonacci(10)) 点击展开查看更多 CSS 折叠 复制 .prose { max-width: none; color: var(--tw-prose-body); } .prose h1 { font-size: 2.25rem; font-weight: 700; } 点击展开查看更多 表格 左对齐 居中对齐 右对齐 内容 1 内容 2 内容 3 较长的内容 中等 短 数据 A 数据 B 数据 C 水平分割线 图片 示例图片 链接 这是一个普通链接。\n这是一个带标题的链接。\n这是一个引用式链接：引用链接\n脚注 这是一个包含脚注的段落1。\n这里是另一个脚注2。\n高亮文本 这是一个包含==高亮文本==的段落。\n上标和下标 H2O 是水的化学分子式。\nE = mc^2^ 是爱因斯坦的质能方程。\n键盘按键 按 Ctrl + C 复制文本。\n缩写 HTML 是超文本标记语言的缩写。\n*[HTML]: 超文本标记语言\n数学公式（如果支持 KaTeX） 行内公式：$E = mc^2$\n块级公式：\n$$ \\int_{-\\infty}^{\\infty} e^{-x^2} dx = \\sqrt{\\pi} $$\n提示框（如果支持） 注意 这是一个注意事项。\n提示 这是一个提示。\n重要 这是重要信息。\n警告 这是一个警告。\n小心 这是一个注意事项。\n详情（如果支持） 点击展开详情 这是折叠的详细内容。\n你可以在这里包含任何 Markdown 语法：\n列表项 粗体文本 代码 混合内容测试 这个段落包含多种格式：粗体、斜体、代码、链接、删除线、==高亮==。\n复杂列表 包含粗体文本的第一项 包含代码的嵌套项 包含链接的另一个嵌套项 包含斜体文本的第二项 有序嵌套项 另一个有序嵌套项 包含删除线文本的第三项 复杂表格 功能 状态 描述 粗体 ✅ 支持粗体文本 斜体 ✅ 支持斜体 代码 ✅ 支持行内代码 链接 ✅ 支持链接 删除线 ❌ 需要测试 这个测试文档涵盖了大多数常见的 Markdown 语法，可以用来验证文档样式的完整性和美观性。\n这是第一个脚注的内容。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n这是命名脚注的内容。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","title":"Markdown 语法测试文档"},{"link":"/test-alert/","text":"GitHub 风格提示框测试 本文用于测试新的 GitHub 风格提示框功能和折叠功能。\n提示框语法 注意提示框 注意 这是一个注意提示框。用于显示用户应该注意的有用信息，即使在快速浏览内容时也应该注意。\n提示提示框 提示 这是一个提示提示框。提供有助于更好或更轻松地完成任务的建议。\n重要提示框 重要 这是一个重要提示框。显示用户成功完成任务所需的关键信息。\n警告提示框 警告 这是一个警告提示框。由于潜在风险，需要用户立即注意的关键内容。\n注意提示框 小心 这是一个注意提示框。建议采取行动以避免负面后果。\n折叠功能 可折叠的注意提示框 可折叠的注意事项 这是一个可折叠的注意提示框。点击标题可以展开或折叠内容。\n这里可以包含更多详细信息，当用户需要时可以展开查看。\n可折叠的提示提示框 高级使用技巧 这个折叠的提示框包含高级使用技巧：\n首先做这个 然后做那个 最后完成这个步骤 记住要按顺序执行这些步骤。\n可折叠的重要提示框 重要配置信息 这些配置设置对系统正常运行至关重要：\nYAML 折叠 复制 server: port: 8080 host: localhost database: url: mongodb://localhost:27017 name: myapp 点击展开查看更多 请确保所有设置都正确配置。\n可折叠的警告提示框 安全警告 在继续之前，请注意以下安全考虑：\n确保所有密码都是强密码 启用双因素认证 定期更新系统 不要在公共网络上执行敏感操作 可折叠的注意提示框 复杂内容示例 这个可折叠框包含复杂的 Markdown 内容：\n子标题 这是一个包含链接和其他格式的段落。\nJAVASCRIPT 折叠 复制 // 代码块示例 function hello() { console.log(\u0026#34;你好，世界！\u0026#34;); } 点击展开查看更多 表格 示例 行1 数据1 行2 数据2 普通引用块 这是一个普通的引用块，不是提示框：\n这是一个标准的引用块。它不会被渲染为提示框，而是使用标准的引用块样式。\n支持多行内容和格式化文本。\n多语言支持 提示框支持多种语言，标题会自动以当前语言显示：\n注意 在中文环境中，这个标题会显示为\u0026quot;注意\u0026quot;。\n提示 在中文环境中，这个标题会显示为\u0026quot;提示\u0026quot;。\n嵌套内容测试 嵌套内容测试 这个提示框包含嵌套内容：\n这是一个嵌套的引用块\n列表项 嵌套列表项 另一个嵌套项 有序列表 嵌套有序列表 另一个嵌套项 使用场景示例 文档说明 注意 本功能从版本 2.0 开始可用。如果您使用的是较早版本，请先升级。\n最佳实践 性能优化建议 为了获得最佳性能，建议：\n使用 CDN 加速静态资源 启用 gzip 压缩 优化图片大小 使用浏览器缓存 重要配置 重要 修改配置文件后，必须重启服务才能生效。\n安全提醒 警告 请勿在生产环境中使用默认密码。\n破坏性操作 小心 此操作将永久删除所有数据，且无法恢复。请确保已备份重要数据。\n这些提示框可以帮助用户更好地理解内容的重要性和上下文，提升文档的可读性和用户体验。\n","title":"GitHub 风格提示框测试"},{"link":"/%E5%9B%BE%E7%89%87%E6%B8%B2%E6%9F%93%E6%B5%8B%E8%AF%95/","text":"图片渲染测试 示例来自 LightGallery 所有图片来自 Unsplash\n单张图片 摄影师 - Daniel Leone LightGallery 灯箱加 Justified 布局 摄影师 - Tobias Rademacher 摄影师 - Massimiliano Morosinotto 摄影师 - Sascha Bosshard 摄影师 - Yusuf Evli 摄影师 - Jay Mantri 摄影师 - Florian van Duyn 摄影师 - Juan Davila 摄影师 - David Marcu 页面资源 Photo by - Daniel Leone 全局资源 (assets 目录) 静态资源 (static 目录) ","title":"图片渲染测试"}],"tags":[{"link":"/tags/ai/","name":"AI","slug":"AI"},{"link":"/tags/blog/","name":"Blog","slug":"Blog"},{"link":"/tags/hugo/","name":"Hugo","slug":"Hugo"},{"link":"/tags/katex/","name":"Katex","slug":"Katex"},{"link":"/tags/life/","name":"Life","slug":"Life"},{"link":"/tags/markdown/","name":"Markdown","slug":"Markdown"},{"link":"/tags/mermaid/","name":"Mermaid","slug":"Mermaid"},{"link":"/tags/%E5%88%86%E4%BA%AB/","name":"分享","slug":"分享"},{"link":"/tags/%E5%9B%BA%E5%AE%9A%E8%B5%84%E4%BA%A7/","name":"固定资产","slug":"固定资产"},{"link":"/tags/%E5%AD%A6%E4%B9%A0/","name":"学习","slug":"学习"},{"link":"/tags/%E5%AE%9E%E5%8A%A1/","name":"实务","slug":"实务"},{"link":"/tags/%E6%8F%90%E7%A4%BA%E6%A1%86/","name":"提示框","slug":"提示框"},{"link":"/tags/%E6%97%A0%E5%BD%A2%E8%B5%84%E4%BA%A7/","name":"无形资产","slug":"无形资产"},{"link":"/tags/%E6%B5%8B%E8%AF%95/","name":"测试","slug":"测试"},{"link":"/tags/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/","name":"环境变量","slug":"环境变量"},{"link":"/tags/%E7%94%9F%E6%B4%BB/","name":"生活","slug":"生活"},{"link":"/tags/%E8%81%8C%E5%B7%A5%E8%96%AA%E9%85%AC/","name":"职工薪酬","slug":"职工薪酬"},{"link":"/tags/%E8%90%8C%E5%A4%87/","name":"萌备","slug":"萌备"},{"link":"/tags/%E8%AF%84%E8%AE%BA/","name":"评论","slug":"评论"},{"link":"/tags/%E8%B4%A2%E5%8A%A1%E7%AE%A1%E7%90%86/","name":"财务管理","slug":"财务管理"},{"link":"/tags/%E9%95%BF%E6%8A%95/","name":"长投","slug":"长投"}]}